<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	
	<!-- 激活 Spring的 @Required,@Autowired,JSR 250's @PostConstruct, @PreDestroy and @Resource 等注解，
	          让这些标注生效，只对已经在spring容器里注册过的bean（无论是通过xml的方式还是通过package sanning的方式）有效!! -->
	<!-- <context:annotation-config/> -->
	
	<!--除了具有<context:annotation-config/>标签的功能，还可以在指定的package下扫描以及向spring容器注册javabean-->
	<context:component-scan base-package="edu.mvcdemo.dao,edu.mvcdemo.service">
	    <!-- 不注册@Controller类型的bean -->
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<!-- 
	          用途1：Spring的xml配置文件中，可以通过${属性名}使用properties文件配置的值
	          用途2：可以使用@Value("${属性名}")注解，给字段赋值
	                      方法1：注解在字段上，给字段赋值
	                      方法2：注解在字段的setter方法中赋值           
	 -->
	 <bean id="propertyConfigurer"  
           class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
          <property name="location">  
              <value>classpath:fileupload.properties</value>  
          </property>  
     </bean>  
	 
	<!-- <context:property-placeholder location="classpath:fileupload.properties"/>   -->
	
	<!-- 
	         用途：可以使用@Value("#{prop.属性名}")注解，给字段赋值
	         方法1：注解在字段上，给字段赋值
	         方法2：注解在字段的setter方法中赋值
	 -->
    <bean id="prop" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
 	    <property name="locations">
 		     <array>
 			     <value>classpath:fileupload.properties</value>
 		     </array>
 	    </property>
    </bean>
    
    <!-- 
    <util:properties id="prop" location="classpath:fileupload.properties"/>
     -->
	
</beans>